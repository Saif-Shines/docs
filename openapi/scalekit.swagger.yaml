swagger: "2.0"
consumes:
    - application/json
produces:
    - application/json

info:
    description: This API is intended to configure and manage organizations or tenants of your app
    title: Organization Management API
    contact:
        name: Scalekit
        url: https://scalekit.com
        email: support@scalekit.com
    license:
        name: Apache 2.0
        url: http://www.apache.org/licenses/LICENSE-2.0
    version: "1.0"
paths:
    /api/v1/organizations/-/connections/{id}:disable:
        patch:
            parameters:
                - type: string
                  name: id
                  in: path
                  required: true
                - type: string
                  name: organization_id
                  in: query
                - type: string
                  name: external_id
                  in: query
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: "#/definitions/connectionsToggleConnectionResponse"
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: "#/definitions/rpcStatus"
            tags:
                - ConnectionService
            operationId: ConnectionService_DisableConnection2
    /api/v1/organizations/{id}/portal_links:
        get:
            operationId: OrganizationService_GetCustomerPortalLink
            parameters:
                - type: string
                  name: id
                  in: path
                  required: true
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: "#/definitions/organizationsCustomerPortalLinksResponse"
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: "#/definitions/rpcStatus"
            tags:
                - OrganizationService
        put:
            summary: Generate Portal Link for Org
            operationId: OrganizationService_GenerateCustomerPortalLink
            parameters:
                - in: path
                  required: true
                  type: string
                  name: id
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: "#/definitions/organizationsCustomerPortalLinksResponse"
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: "#/definitions/rpcStatus"
            tags:
                - OrganizationService
        delete:
            tags:
                - OrganizationService
            operationId: OrganizationService_DeleteCustomerPortalLink
            parameters:
                - type: string
                  name: id
                  in: path
                  required: true
            responses:
                "200":
                    description: A successful response.
                    schema:
                        type: object
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: "#/definitions/rpcStatus"
    /api/v1/organizations/{organization_id}/connections/{id}:
        get:
            tags:
                - ConnectionService
            operationId: ConnectionService_GetConnection
            parameters:
                - type: string
                  name: organization_id
                  in: path
                  required: true
                - type: string
                  name: id
                  in: path
                  required: true
                - in: query
                  type: string
                  name: external_id
            responses:
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: "#/definitions/rpcStatus"
                "200":
                    description: A successful response.
                    schema:
                        $ref: "#/definitions/connectionsGetConnectionResponse"
        delete:
            tags:
                - ConnectionService
            operationId: ConnectionService_DeleteConnection
            parameters:
                - name: organization_id
                  in: path
                  required: true
                  type: string
                - type: string
                  name: id
                  in: path
                  required: true
                - type: string
                  name: external_id
                  in: query
            responses:
                "200":
                    description: A successful response.
                    schema:
                        type: object
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: "#/definitions/rpcStatus"
        patch:
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: "#/definitions/connectionsUpdateConnectionResponse"
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: "#/definitions/rpcStatus"
            tags:
                - ConnectionService
            operationId: ConnectionService_UpdateConnection
            parameters:
                - required: true
                  type: string
                  name: organization_id
                  in: path
                - type: string
                  name: id
                  in: path
                  required: true
                - schema:
                      $ref: "#/definitions/v1connectionsUpdateConnection"
                  name: connection
                  in: body
                  required: true
                - type: string
                  name: external_id
                  in: query
    /api/v1/organizations/{organization_id}/connections/{id}:disable:
        patch:
            tags:
                - ConnectionService
            operationId: ConnectionService_DisableConnection
            parameters:
                - name: organization_id
                  in: path
                  required: true
                  type: string
                - type: string
                  name: id
                  in: path
                  required: true
                - type: string
                  name: external_id
                  in: query
            responses:
                "200":
                    schema:
                        $ref: "#/definitions/connectionsToggleConnectionResponse"
                    description: A successful response.
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: "#/definitions/rpcStatus"
    /api/v1/organizations/{organization_id}/connections/{id}:enable:
        patch:
            tags:
                - ConnectionService
            operationId: ConnectionService_EnableConnection
            parameters:
                - type: string
                  name: organization_id
                  in: path
                  required: true
                - type: string
                  name: id
                  in: path
                  required: true
                - type: string
                  name: external_id
                  in: query
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: "#/definitions/connectionsToggleConnectionResponse"
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: "#/definitions/rpcStatus"
    /api/v1/organizations/{organization_id}/connections:
        get:
            tags:
                - ConnectionService
            operationId: ConnectionService_ListConnections
            parameters:
                - type: string
                  name: organization_id
                  in: path
                  required: true
                - type: string
                  name: external_id
                  in: query
                - type: string
                  name: include
                  in: query
            responses:
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: "#/definitions/rpcStatus"
                "200":
                    description: A successful response.
                    schema:
                        $ref: "#/definitions/connectionsListConnectionsResponse"
        post:
            operationId: ConnectionService_CreateConnection
            parameters:
                - type: string
                  name: organization_id
                  in: path
                  required: true
                - in: body
                  required: true
                  schema:
                      $ref: "#/definitions/v1connectionsCreateConnection"
                  name: connection
                - type: string
                  name: external_id
                  in: query
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: "#/definitions/connectionsCreateConnectionResponse"
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: "#/definitions/rpcStatus"
            tags:
                - ConnectionService
    /api/v1/organizations:
        get:
            tags:
                - OrganizationService
            operationId: OrganizationService_ListOrganization
            parameters:
                - required: true
                  type: integer
                  format: int64
                  description: Number of results to be returned. Max supported page_size is 30
                  name: page_size
                  in: query
                - type: string
                  name: page_token
                  in: query
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: "#/definitions/organizationsListOrganizationsResponse"
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: "#/definitions/rpcStatus"
        post:
            tags:
                - OrganizationService
            summary: Create Organization
            operationId: OrganizationService_CreateOrganization
            parameters:
                - name: organization
                  in: body
                  required: true
                  schema:
                      description: The org object
                      $ref: "#/definitions/v1organizationsCreateOrganization"
                  description: Organization details
            responses:
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: "#/definitions/rpcStatus"
                "200":
                    schema:
                        $ref: "#/definitions/organizationsCreateOrganizationResponse"
                    description: A successful response.
    /api/v1/organizations/-:
        delete:
            tags:
                - OrganizationService
            summary: Delete an Organization
            operationId: OrganizationService_DeleteOrganization2
            parameters:
                - type: string
                  description: Id of the Org to update
                  name: id
                  in: query
                - type: string
                  description: External Id of the Org to update
                  name: external_id
                  in: query
            responses:
                "200":
                    description: A successful response.
                    schema:
                        type: object
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: "#/definitions/rpcStatus"
    /api/v1/organizations/-/connections:
        get:
            parameters:
                - type: string
                  name: organization_id
                  in: query
                - type: string
                  name: external_id
                  in: query
                - type: string
                  name: include
                  in: query
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: "#/definitions/connectionsListConnectionsResponse"
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: "#/definitions/rpcStatus"
            tags:
                - ConnectionService
            operationId: ConnectionService_ListConnections2
        post:
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: "#/definitions/connectionsCreateConnectionResponse"
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: "#/definitions/rpcStatus"
            tags:
                - ConnectionService
            operationId: ConnectionService_CreateConnection2
            parameters:
                - name: connection
                  in: body
                  required: true
                  schema:
                      $ref: "#/definitions/v1connectionsCreateConnection"
                - type: string
                  name: organization_id
                  in: query
                - type: string
                  name: external_id
                  in: query
    /api/v1/organizations/-/connections/{id}:
        get:
            tags:
                - ConnectionService
            operationId: ConnectionService_GetConnection2
            parameters:
                - type: string
                  name: id
                  in: path
                  required: true
                - type: string
                  name: organization_id
                  in: query
                - name: external_id
                  in: query
                  type: string
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: "#/definitions/connectionsGetConnectionResponse"
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: "#/definitions/rpcStatus"
        delete:
            responses:
                "200":
                    schema:
                        type: object
                    description: A successful response.
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: "#/definitions/rpcStatus"
            tags:
                - ConnectionService
            operationId: ConnectionService_DeleteConnection2
            parameters:
                - name: id
                  in: path
                  required: true
                  type: string
                - in: query
                  type: string
                  name: organization_id
                - type: string
                  name: external_id
                  in: query
        patch:
            operationId: ConnectionService_UpdateConnection2
            parameters:
                - type: string
                  name: id
                  in: path
                  required: true
                - name: connection
                  in: body
                  required: true
                  schema:
                      $ref: "#/definitions/v1connectionsUpdateConnection"
                - type: string
                  name: organization_id
                  in: query
                - type: string
                  name: external_id
                  in: query
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: "#/definitions/connectionsUpdateConnectionResponse"
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: "#/definitions/rpcStatus"
            tags:
                - ConnectionService
    /api/v1/organizations/-/connections/{id}:enable:
        patch:
            operationId: ConnectionService_EnableConnection2
            parameters:
                - in: path
                  required: true
                  type: string
                  name: id
                - type: string
                  name: organization_id
                  in: query
                - type: string
                  name: external_id
                  in: query
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: "#/definitions/connectionsToggleConnectionResponse"
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: "#/definitions/rpcStatus"
            tags:
                - ConnectionService
    /api/v1/organizations/-/connections:search:
        get:
            operationId: ConnectionService_GetConnectionByDomain
            parameters:
                - type: string
                  name: domain
                  in: query
            responses:
                "200":
                    schema:
                        $ref: "#/definitions/connectionsGetConnectionByDomainResponse"
                    description: A successful response.
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: "#/definitions/rpcStatus"
            tags:
                - ConnectionService
    /api/v1/organizations/{id}:
        get:
            summary: Get Organization Description here
            operationId: OrganizationService_GetOrganization
            parameters:
                - name: id
                  in: path
                  required: true
                  type: string
                  description: Id of the Org to update
                - name: external_id
                  in: query
                  type: string
                  description: External Id of the Org to update
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: "#/definitions/organizationsGetOrganizationResponse"
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: "#/definitions/rpcStatus"
            tags:
                - OrganizationService
        delete:
            tags:
                - OrganizationService
            summary: Delete an Organization
            operationId: OrganizationService_DeleteOrganization
            parameters:
                - type: string
                  description: Id of the Org to update
                  name: id
                  in: path
                  required: true
                - type: string
                  description: External Id of the Org to update
                  name: external_id
                  in: query
            responses:
                "200":
                    description: A successful response.
                    schema:
                        type: object
                default:
                    schema:
                        $ref: "#/definitions/rpcStatus"
                    description: An unexpected error response.
        patch:
            tags:
                - OrganizationService
            summary: Update Organization description here
            operationId: OrganizationService_UpdateOrganization
            parameters:
                - required: true
                  type: string
                  description: Id of the Org to update
                  name: id
                  in: path
                - name: organization
                  in: body
                  required: true
                  schema:
                      description: Organization Parameters to be updated
                      $ref: "#/definitions/v1organizationsUpdateOrganization"
                - type: string
                  description: External Id of the Org to update
                  name: external_id
                  in: query
            responses:
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: "#/definitions/rpcStatus"
                "200":
                    description: A successful response.
                    schema:
                        $ref: "#/definitions/organizationsUpdateOrganizationResponse"
definitions:
    commonsRegionCode:
        description: " - REGION_CODE_UNSPECIFIED: If the region code is unspecified the selected region will automatically be decided based on the origin of the call."
        type: string
        default: REGION_CODE_UNSPECIFIED
        enum:
            - REGION_CODE_UNSPECIFIED
            - US
            - EU
    connectionsSAMLSigningOptions:
        enum:
            - SAML_SIGNING_OPTIONS_UNSPECIFIED
            - NO_SIGNING
            - SAML_ONLY_RESPONSE_SIGNING
            - SAML_ONLY_ASSERTION_SIGNING
            - SAML_RESPONSE_ASSERTION_SIGNING
        type: string
        title: enums all
        default: SAML_SIGNING_OPTIONS_UNSPECIFIED
    connectionsToggleConnectionResponse:
        type: object
        properties:
            enabled:
                type: boolean
            error_message:
                type: string
    protobufAny:
        description: |-
            `Any` contains an arbitrary serialized protocol buffer message along with a
            URL that describes the type of the serialized message.

            Protobuf library provides support to pack/unpack Any values in the form
            of utility functions or additional generated methods of the Any type.

            Example 1: Pack and unpack a message in C++.

                Foo foo = ...;
                Any any;
                any.PackFrom(foo);
                ...
                if (any.UnpackTo(&foo)) {
                  ...
                }

            Example 2: Pack and unpack a message in Java.

                Foo foo = ...;
                Any any = Any.pack(foo);
                ...
                if (any.is(Foo.class)) {
                  foo = any.unpack(Foo.class);
                }
                // or ...
                if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                  foo = any.unpack(Foo.getDefaultInstance());
                }

             Example 3: Pack and unpack a message in Python.

                foo = Foo(...)
                any = Any()
                any.Pack(foo)
                ...
                if any.Is(Foo.DESCRIPTOR):
                  any.Unpack(foo)
                  ...

             Example 4: Pack and unpack a message in Go

                 foo := &pb.Foo{...}
                 any, err := anypb.New(foo)
                 if err != nil {
                   ...
                 }
                 ...
                 foo := &pb.Foo{}
                 if err := any.UnmarshalTo(foo); err != nil {
                   ...
                 }

            The pack methods provided by protobuf library will by default use
            'type.googleapis.com/full.type.name' as the type URL and the unpack
            methods only use the fully qualified type name after the last '/'
            in the type URL, for example "foo.bar.com/x/y.z" will yield type
            name "y.z".

            JSON
            ====
            The JSON representation of an `Any` value uses the regular
            representation of the deserialized, embedded message, with an
            additional field `@type` which contains the type URL. Example:

                package google.profile;
                message Person {
                  string first_name = 1;
                  string last_name = 2;
                }

                {
                  "@type": "type.googleapis.com/google.profile.Person",
                  "firstName": <string>,
                  "lastName": <string>
                }

            If the embedded message type is well-known and has a custom JSON
            representation, that representation will be embedded adding a field
            `value` which holds the custom JSON in addition to the `@type`
            field. Example (for message [google.protobuf.Duration][]):

                {
                  "@type": "type.googleapis.com/google.protobuf.Duration",
                  "value": "1.212s"
                }
        type: object
        properties:
            "@type":
                description: |-
                    A URL/resource name that uniquely identifies the type of the serialized
                    protocol buffer message. This string must contain at least
                    one "/" character. The last segment of the URL's path must represent
                    the fully qualified name of the type (as in
                    `path/google.protobuf.Duration`). The name should be in a canonical form
                    (e.g., leading "." is not accepted).

                    In practice, teams usually precompile into the binary all types that they
                    expect it to use in the context of Any. However, for URLs which use the
                    scheme `http`, `https`, or no scheme, one can optionally set up a type
                    server that maps type URLs to message definitions as follows:

                    * If no scheme is provided, `https` is assumed.
                    * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                      value in binary format, or produce an error.
                    * Applications are allowed to cache lookup results based on the
                      URL, or have them precompiled into a binary to avoid any
                      lookup. Therefore, binary compatibility needs to be preserved
                      on changes to types. (Use versioned type names to manage
                      breaking changes.)

                    Note: this functionality is not currently available in the official
                    protobuf release, and it is not used for type URLs beginning with
                    type.googleapis.com. As of May 2023, there are no widely used type server
                    implementations and no plans to implement one.

                    Schemes other than `http`, `https` (or the empty scheme) might be
                    used with implementation specific semantics.
                type: string
        additionalProperties: false
    connectionsConnectionProvider:
        type: string
        default: CONNECTION_PROVIDER_UNSPECIFIED
        enum:
            - CONNECTION_PROVIDER_UNSPECIFIED
            - OKTA
            - GOOGLE
            - MICROSOFT_AD
            - AUTH0
            - ONELOGIN
            - PING_IDENTITY
            - JUMPCLOUD
            - CUSTOM
    connectionsListConnection:
        type: object
        properties:
            enabled:
                type: boolean
            id:
                type: string
            organization_id:
                type: string
            provider:
                $ref: "#/definitions/connectionsConnectionProvider"
            status:
                $ref: "#/definitions/connectionsConnectionStatus"
            type:
                $ref: "#/definitions/connectionsConnectionType"
            ui_button_title:
                type: string
    connectionsConnectionType:
        enum:
            - INVALID
            - OIDC
            - SAML
            - PASSWORD
        type: string
        default: INVALID
    connectionsOIDCScope:
        type: string
        default: OIDC_SCOPE_UNSPECIFIED
        enum:
            - OIDC_SCOPE_UNSPECIFIED
            - openid
            - profile
            - email
            - address
            - phone
    organizationsCreateOrganizationResponse:
        type: object
        properties:
            organization:
                $ref: "#/definitions/organizationsOrganization"
    connectionsCreateConnectionResponse:
        type: object
        properties:
            connection:
                $ref: "#/definitions/connectionsConnection"
    connectionsUpdateConnectionResponse:
        type: object
        properties:
            connection:
                $ref: "#/definitions/connectionsConnection"
    organizationsGetOrganizationResponse:
        type: object
        properties:
            organization:
                $ref: "#/definitions/organizationsOrganization"
    organizationsLink:
        type: object
        properties:
            expire_time:
                type: string
                format: date-time
            id:
                type: string
            location:
                type: string
    v1organizationsUpdateOrganization:
        description: For update messages ensure the indexes are same as the base model itself.
        type: object
        properties:
            display_name:
                type: string
            external_id:
                type: string
            metadata:
                type: object
                additionalProperties:
                    type: string
    v1connectionsCreateConnection:
        type: object
        properties:
            provider:
                $ref: "#/definitions/connectionsConnectionProvider"
            type:
                $ref: "#/definitions/connectionsConnectionType"
    v1connectionsUpdateConnection:
        type: object
        properties:
            logout_uri:
                type: string
            provider:
                $ref: "#/definitions/connectionsConnectionProvider"
            type:
                $ref: "#/definitions/connectionsConnectionType"
            oidc_config:
                $ref: "#/definitions/connectionsOIDCConnectionConfig"
            saml_config:
                $ref: "#/definitions/connectionsSAMLConnectionConfigRequest"
            ui_button_title:
                type: string
            attribute_mapping:
                type: object
                additionalProperties:
                    type: string
            configuration_type:
                $ref: "#/definitions/connectionsConfigurationType"
            debug_enabled:
                type: boolean
    connectionsConnection:
        type: object
        properties:
            configuration_type:
                $ref: "#/definitions/connectionsConfigurationType"
            enabled:
                type: boolean
            login_initiation_uri:
                type: string
            ui_button_title:
                type: string
            id:
                type: string
            type:
                $ref: "#/definitions/connectionsConnectionType"
            logout_uri:
                type: string
            oidc_config:
                $ref: "#/definitions/connectionsOIDCConnectionConfig"
            provider:
                $ref: "#/definitions/connectionsConnectionProvider"
            status:
                $ref: "#/definitions/connectionsConnectionStatus"
            attribute_mapping:
                type: object
                additionalProperties:
                    type: string
            debug_enabled:
                type: boolean
            organization_id:
                type: string
            saml_config:
                $ref: "#/definitions/connectionsSAMLConnectionConfigResponse"
            test_connection_uri:
                type: string
    connectionsGetConnectionResponse:
        properties:
            connection:
                $ref: "#/definitions/connectionsConnection"
        type: object
    connectionsIDPCertificate:
        type: object
        properties:
            create_time:
                type: string
                format: date-time
            expiry_time:
                type: string
                format: date-time
            id:
                type: string
            issuer:
                type: string
            certificate:
                type: string
    connectionsRequestBinding:
        type: string
        default: REQUEST_BINDING_UNSPECIFIED
        enum:
            - REQUEST_BINDING_UNSPECIFIED
            - HTTP_POST
            - HTTP_REDIRECT
    organizationsOrganization:
        type: object
        required:
            - create_time
        properties:
            external_id:
                description: External Id . This can be used to store a unique identifier that can help correalate scalekit Org with your SaaS app's tenant
                type: string
                title: External Id is useful to store a unique identifier for a given Org that. The unique Identifier can be the id of your tenant / org in your SaaSApp
                example: my_unique_id
            id:
                title: Id
                example: org_2123312131125533
                description: Organization ID
                type: string
            metadata:
                description: Key value pairs extension attributes.
                type: object
                additionalProperties:
                    type: string
            region_code:
                description: "Region code . Only US is supported "
                title: Optional regioncode
                $ref: "#/definitions/commonsRegionCode"
                example: US
            update_time:
                description: Updated Time
                type: string
                format: date-time
                title: Updated time
            create_time:
                type: string
                format: date-time
                title: Created Time
                example: 2023-03-03 12:30
                description: Created Time
            display_name:
                description: Display Name of the Organization
                type: string
                title: Name of the org to be used in display
                example: Acme Corp
    connectionsGetConnectionByDomainResponse:
        type: object
        properties:
            connection_id:
                type: string
            status:
                $ref: "#/definitions/connectionsConnectionStatus"
            type:
                $ref: "#/definitions/connectionsConnectionType"
            ui_button_title:
                type: string
    connectionsListConnectionsResponse:
        type: object
        properties:
            connections:
                type: array
                items:
                    type: object
                    $ref: "#/definitions/connectionsListConnection"
    connectionsOIDCConnectionConfig:
        type: object
        properties:
            client_id:
                type: string
            discovery_endpoint:
                type: string
            jwks_uri:
                type: string
            token_auth_type:
                $ref: "#/definitions/connectionsTokenAuthType"
            token_uri:
                type: string
            user_info_uri:
                type: string
            authorize_uri:
                type: string
            client_secret:
                type: string
            issuer:
                type: string
            pkce_enabled:
                type: boolean
            redirect_uri:
                type: string
            scopes:
                type: array
                items:
                    $ref: "#/definitions/connectionsOIDCScope"
    connectionsSAMLConnectionConfigResponse:
        type: object
        properties:
            saml_signing_option:
                $ref: "#/definitions/connectionsSAMLSigningOptions"
            ui_button_title:
                type: string
            want_request_signed:
                type: boolean
            idp_certificates:
                type: array
                items:
                    type: object
                    $ref: "#/definitions/connectionsIDPCertificate"
            idp_entity_id:
                type: string
            idp_slo_request_binding:
                $ref: "#/definitions/connectionsRequestBinding"
            sp_assertion_url:
                type: string
            idp_sso_url:
                type: string
            sp_entity_id:
                type: string
            sp_metadata_url:
                type: string
            allow_idp_initiated_login:
                type: boolean
            default_redirect_uri:
                type: string
            force_authn:
                type: boolean
            idp_name_id_format:
                $ref: "#/definitions/connectionsNameIdFormat"
            idp_slo_url:
                type: string
            assertion_encrypted:
                type: boolean
            idp_metadata_url:
                type: string
            idp_sso_request_binding:
                $ref: "#/definitions/connectionsRequestBinding"
    organizationsListOrganizationsResponse:
        type: object
        properties:
            organizations:
                type: array
                items:
                    type: object
                    $ref: "#/definitions/organizationsOrganization"
            total_size:
                type: integer
                format: int64
            next_page_token:
                type: string
    organizationsCustomerPortalLinksResponse:
        type: object
        properties:
            links:
                items:
                    type: object
                    $ref: "#/definitions/organizationsLink"
                type: array
    organizationsUpdateOrganizationResponse:
        type: object
        properties:
            organization:
                $ref: "#/definitions/organizationsOrganization"
    connectionsConfigurationType:
        type: string
        default: CONFIGURATION_TYPE_UNSPECIFIED
        enum:
            - CONFIGURATION_TYPE_UNSPECIFIED
            - DISCOVERY
            - MANUAL
    connectionsConnectionStatus:
        type: string
        default: CONNECTION_STATUS_UNSPECIFIED
        enum:
            - CONNECTION_STATUS_UNSPECIFIED
            - DRAFT
            - IN_PROGRESS
            - COMPLETED
    connectionsNameIdFormat:
        type: string
        default: NAME_ID_FORMAT_NIL
        enum:
            - NAME_ID_FORMAT_NIL
            - UNSPECIFIED
            - EMAIL
            - TRANSIENT
            - PERSISTENT
    connectionsSAMLConnectionConfigRequest:
        type: object
        properties:
            assertion_encrypted:
                type: boolean
            want_request_signed:
                type: boolean
            allow_idp_initiated_login:
                type: boolean
            default_redirect_uri:
                type: string
            idp_sso_url:
                type: string
            ui_button_title:
                type: string
            idp_certificate:
                type: string
            idp_entity_id:
                type: string
            idp_slo_url:
                type: string
            saml_signing_option:
                $ref: "#/definitions/connectionsSAMLSigningOptions"
            slo_request_binding:
                $ref: "#/definitions/connectionsRequestBinding"
            sso_request_binding:
                $ref: "#/definitions/connectionsRequestBinding"
            force_authn:
                type: boolean
            idp_metadata_url:
                type: string
            idp_name_id_format:
                $ref: "#/definitions/connectionsNameIdFormat"
    connectionsTokenAuthType:
        enum:
            - TOKEN_AUTH_TYPE_UNSPECIFIED
            - URL_PARAMS
            - BASIC_AUTH
        type: string
        default: TOKEN_AUTH_TYPE_UNSPECIFIED
    rpcStatus:
        type: object
        properties:
            code:
                type: integer
                format: int32
            details:
                items:
                    type: object
                    $ref: "#/definitions/protobufAny"
                type: array
            message:
                type: string
    v1organizationsCreateOrganization:
        type: object
        properties:
            metadata:
                description: Key value pairs extension attributes.
                type: object
                additionalProperties:
                    type: string
            region_code:
                $ref: "#/definitions/commonsRegionCode"
                example: US
                description: "Region code . Only US is supported "
                title: Optional regioncode
            display_name:
                example: Acme Corp
                description: Display Name of the Organization
                type: string
                title: Name of the org to be used in display
            external_id:
                description: External Id . This can be used to store a unique identifier that can help correalate scalekit Org with your SaaS app's tenant
                type: string
                title: External Id is useful to store a unique identifier for a given Org that. The unique Identifier can be the id of your tenant / org in your SaaSApp
                example: my_unique_id
tags:
    - name: OrganizationService
    - name: ConnectionService
externalDocs:
    description: Detailed documentation for Scalekit
    url: https://dash.readme.com/hub-go/test-scalekit?redirect=/v1.0
